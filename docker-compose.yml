version: '3'
services:

  api-server:
    container_name: api-server
    build:
      context: ./Server
      args:
        SERVER_PORT: "${SERVER_PORT}"
    env_file: .env
    networks:
      - backend
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./Server:/usr/src/app

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    env_file: .env
    networks:
      - backend
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./DB/scripts/00-stackoverfaux.json:/docker-entrypoint-initdb.d/00-stackoverfaux.json
      - ./DB/scripts/01-create.sql:/docker-entrypoint-initdb.d/01-create.sql
      - ./DB/scripts/02-ETL.sql:/docker-entrypoint-initdb.d/02-ETL.sql
      - ./DB/scripts/03-pgsync-config.sql:/docker-entrypoint-initdb.d/03-pgsync-config.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    env_file: .env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '${ELASTICSEARCH_PORT}:9200'
    networks:
      - backend

  kibana:
    image: kibana:8.11.3
    container_name: kibana
    env_file: .env
    depends_on:
      - elasticsearch
    ports:
      - '${KIBANA_PORT}:${KIBANA_PORT}'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=${KIBANA_PORT}
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    env_file: .env
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - backend

  pgsync:
    build:
      context: ./PGSync
    container_name: pgsync
    env_file: .env
    networks:
      - backend
    environment:
      - PG_HOST=${POSTGRES_HOST}
      - PG_PORT=${POSTGRES_PORT}
      - PG_USER=${POSTGRES_USER}
      - PG_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
      - REDIS_HOST=${REDIS_HOST}

networks:
  backend:
    driver: bridge